/* ###################################################################
**     Filename    : main.c
**     Project     : Teensy3.1_FTMBlinky
**     Processor   : MK20DX256VMC7
**     Version     : Driver 01.01
**     Compiler    : GNU C Compiler
**     Date/Time   : 2015-05-25, 18:47, # CodeGen: 0
**     Abstract    :
**         Main module.
**         This module contains user's application code.
**     Settings    :
**     Contents    :
**         No public methods
**
** ###################################################################*/
/*!
** @file main.c
** @version 01.01
** @brief
**         Main module.
**         This module contains user's application code.
*/         
/*!
**  @addtogroup main_module main module documentation
**  @{
*/         
/* MODULE main */


/* Including needed modules to compile this module/procedure */
#include "Cpu.h"
#include "Events.h"
#include "FTM0.h"
#include "OnboardLED.h"
#include "BitIoLdd1.h"
/* Including shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* User includes (#include below this line is not maintained by Processor Expert) */

void SetFTM0_CH0( uint32_t val )
{
	// turn everything off
	FTM0_SC = 0;

	// Set the counter value
	 FTM0_C0V = FTM_CnV_VAL(val);

	 // turn everything back on again
	 /* FTM0_SC: TOF=0,TOIE=0,CPWMS=0,CLKS=2,PS=0 */
	 	  FTM0_SC = (uint32_t)((FTM0_SC & (uint32_t)~(uint32_t)(
	 	             FTM_SC_TOF_MASK |
	 	             FTM_SC_TOIE_MASK |
	 	             FTM_SC_CPWMS_MASK |
	 	             FTM_SC_CLKS(0x01) |
	 	             FTM_SC_PS(0x07)
	 	            )) | (uint32_t)(
	 	             FTM_SC_CLKS(0x02)
	 	            ));
}

/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable MISRA rule (6.3) checking. */
{
	int count = 0;
	int ledCnt = 0;
	int n;
  /* Write your local variable definition here */

  /*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  PE_low_level_init();
  /*** End of Processor Expert internal initialization.                    ***/

  /* Write your code here */
  // This code should flash an LED on pin 22!
  for(;;)
  {
	  // Set the channel0 value
	  SetFTM0_CH0(count);

	  count+= 500;
	  if (count > 10000)
	  {
		  count = 0;
	  }

	  // Little debug LED
	  if (ledCnt++ & 0x1)
		  OnboardLED_SetVal();
	  else
		  OnboardLED_ClrVal();

	  for (n=0; n<4000000; n++);	// dumb delay
  }

  /*** Don't write any code pass this line, or it will be deleted during code generation. ***/
  /*** RTOS startup code. Macro PEX_RTOS_START is defined by the RTOS component. DON'T MODIFY THIS CODE!!! ***/
  #ifdef PEX_RTOS_START
    PEX_RTOS_START();                  /* Startup of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
  /*** End of RTOS startup code.  ***/
  /*** Processor Expert end of main routine. DON'T MODIFY THIS CODE!!! ***/
  for(;;){}
  /*** Processor Expert end of main routine. DON'T WRITE CODE BELOW!!! ***/
} /*** End of main routine. DO NOT MODIFY THIS TEXT!!! ***/

/* END main */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
